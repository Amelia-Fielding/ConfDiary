/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ConfDiary, ConfDiaryInterface } from "../../contracts/ConfDiary";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DecryptionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DiaryEntryCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "DiaryEntryDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "liker",
        type: "address",
      },
    ],
    name: "EntryLiked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "HappinessRankUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "MoodUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "otherUser",
        type: "address",
      },
    ],
    name: "amIHappierThan",
    outputs: [
      {
        internalType: "ebool",
        name: "iAmHappier",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        internalType: "address",
        name: "user2",
        type: "address",
      },
    ],
    name: "compareMoodSum",
    outputs: [
      {
        internalType: "ebool",
        name: "user1HasBetterMood",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint256",
        name: "encryptedContentHash",
        type: "bytes32",
      },
      {
        internalType: "externalEuint256",
        name: "encryptedAuthorHash",
        type: "bytes32",
      },
      {
        internalType: "externalEuint8",
        name: "encryptedMood",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "contentProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "authorProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "moodProof",
        type: "bytes",
      },
    ],
    name: "createDiaryEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "deleteDiaryEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "diaryEntries",
    outputs: [
      {
        internalType: "euint256",
        name: "encryptedContentHash",
        type: "bytes32",
      },
      {
        internalType: "euint256",
        name: "encryptedAuthorHash",
        type: "bytes32",
      },
      {
        internalType: "euint8",
        name: "encryptedMood",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isDeleted",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "entryExists",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "entryLikes",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "getDiaryEntry",
    outputs: [
      {
        components: [
          {
            internalType: "euint256",
            name: "encryptedContentHash",
            type: "bytes32",
          },
          {
            internalType: "euint256",
            name: "encryptedAuthorHash",
            type: "bytes32",
          },
          {
            internalType: "euint8",
            name: "encryptedMood",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDeleted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "entryId",
            type: "uint256",
          },
        ],
        internalType: "struct ConfDiary.DiaryEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "getEntryLikes",
    outputs: [
      {
        internalType: "euint32",
        name: "likes",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGlobalMoodStats",
    outputs: [
      {
        internalType: "euint32",
        name: "moodSum",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "moodCount",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getRecentEntries",
    outputs: [
      {
        internalType: "uint256[]",
        name: "entryIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalEntries",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserEntries",
    outputs: [
      {
        internalType: "uint256[]",
        name: "entryIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserMoodStats",
    outputs: [
      {
        internalType: "euint32",
        name: "moodSum",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "moodCount",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserMoodSum",
    outputs: [
      {
        internalType: "euint32",
        name: "moodSum",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "globalMoodCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "globalMoodSum",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasUserLikedEntry",
    outputs: [
      {
        internalType: "euint8",
        name: "hasLiked",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "likeEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "requestDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalEntries",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userEntries",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userHappinessRank",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userLikedEntry",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userMoodCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userMoodSum",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061018a6100ae604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf69602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b611e01806101975f395ff3fe608060405234801561000f575f80fd5b50600436106101af575f3560e01c80638f2586f9116100f3578063c0b996df11610093578063da1f12ab1161006e578063da1f12ab14610494578063f5aee0e51461049c578063f80af95b146104af578063fb1dad7e146104e4575f80fd5b8063c0b996df14610438578063c2b0ad4b14610457578063d0fd5ae41461046a575f80fd5b8063a3109923116100ce578063a3109923146103d4578063aa1e0ec4146103e7578063ac54d9f1146103fa578063ada631dd1461042f575f80fd5b80638f2586f914610376578063904181d014610395578063915c015e146103b5575f80fd5b806323bbf34d1161015e578063646a990f11610139578063646a990f146103285780636b79deeb1461033b5780637fef036e1461035a57806382e8919714610363575f80fd5b806323bbf34d146102d657806352806929146102f257806354381f5c14610315575f80fd5b806312d491c91161018e57806312d491c91461025957806314be6224146102615780632136dcf214610276575f80fd5b8062ad9e4b146101b357806309457387146101cf5780630b913af014610246575b5f80fd5b6101bc60065481565b6040519081526020015b60405180910390f35b6102176101dd366004611a9b565b5f60208190529081526040902080546001820154600283015460038401546004850154600590950154939492939192909160ff9091169086565b6040805196875260208701959095529385019290925260608401521515608083015260a082015260c0016101c6565b6101bc610254366004611acd565b6104f7565b6002546101bc565b61027461026f366004611a9b565b610522565b005b610289610284366004611a9b565b61072a565b6040516101c691905f60c0820190508251825260208301516020830152604083015160408301526060830151606083015260808301511515608083015260a083015160a083015292915050565b6005546006545b604080519283526020830191909152016101c6565b610305610300366004611a9b565b610867565b60405190151581526020016101c6565b610274610323366004611b3a565b61089c565b6101bc610336366004611bea565b610acc565b6101bc610349366004611bea565b60036020525f908152604090205481565b6101bc60025481565b610274610371366004611a9b565b610b34565b6101bc610384366004611bea565b60096020525f908152604090205481565b6103a86103a3366004611bea565b610cdd565b6040516101c69190611c03565b6101bc6103c3366004611bea565b60046020525f908152604090205481565b6101bc6103e2366004611a9b565b610d46565b6101bc6103f5366004611c46565b610da9565b6102dd610408366004611bea565b6001600160a01b03165f908152600360209081526040808320546004909252909120549091565b6101bc60055481565b6101bc610446366004611a9b565b60076020525f908152604090205481565b6103a8610465366004611a9b565b610de1565b6101bc610478366004611c77565b600860209081525f928352604080842090915290825290205481565b6127116101bc565b6102746104aa366004611a9b565b610fa5565b6101bc6104bd366004611c77565b5f9182526008602090815260408084206001600160a01b0393909316845291905290205490565b6101bc6104f2366004611bea565b611160565b6001602052815f5260405f208181548110610510575f80fd5b905f5260205f20015f91509150505481565b5f8111801561053357506002548111155b6105775760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908195b9d1c9e48125160821b60448201526064015b60405180910390fd5b5f8181526020819052604090206004015460ff16156105d85760405162461bcd60e51b815260206004820152601560248201527f456e74727920616c72656164792064656c657465640000000000000000000000604482015260640161056e565b335f9081526001602090815260408083208054825181850281018501909352808352849383018282801561062957602002820191905f5260205f20905b815481526020019060010190808311610615575b505050505090505f5b815181101561066c578382828151811061064e5761064e611c98565b602002602001015103610664576001925061066c565b600101610632565b50816106e05760405162461bcd60e51b815260206004820152602560248201527f4f6e6c792074686520617574686f722063616e2064656c65746520746869732060448201527f656e747279000000000000000000000000000000000000000000000000000000606482015260840161056e565b5f83815260208190526040808220600401805460ff1916600117905551339185917f5483383c8505066ca4c0da71076ecb3190f0ef8e23b7508b3e4614d9d31ae0d29190a3505050565b6040805160c0810182525f80825260208201819052918101829052606081018290526080810182905260a08101919091525f8211801561076c57506002548211155b6107ab5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908195b9d1c9e48125160821b604482015260640161056e565b5f8281526020819052604090206004015460ff161561080c5760405162461bcd60e51b815260206004820152601660248201527f456e74727920686173206265656e2064656c6574656400000000000000000000604482015260640161056e565b505f9081526020818152604091829020825160c0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600482015460ff161515608082015260059091015460a082015290565b5f808211801561087957506002548211155b801561089657505f8281526020819052604090206004015460ff16155b92915050565b5f6108dc8a88888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111f392505050565b90505f61091e8a87878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111f392505050565b90505f6109608a86868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061120792505050565b600280549192505f61097183611cc0565b9091555050600280546040805160c081018252868152602080820187815282840187815242606085019081525f6080860181815260a0870189815289835282875288832097518855945160018089019190915593519987019990995590516003860155965160048501805460ff191691151591909117905590516005909301929092553380865282825292852080549283018155855290932090920181905590610a1b9083611214565b610a2484611350565b50610a2e83611350565b50610a3882611350565b50610a43843361135f565b50610a4e833361135f565b50610a59823361135f565b50604051428152339082907fdfaccbb413ae65d43f49ea186f1b3daa562f03df0aee6e479367baf06ee6d0279060200160405180910390a3604051339082907f45c173b0c2be43a6f1ab8d45342993c04a2c8cd7c8cefbe3bb37ed5b24bca1b3905f90a350505050505050505050505050565b335f908152600360208181526040808420546004808452828620546001600160a01b0388168752948452828620549352908420549092919084610b0f8583611371565b90505f610b1c8486611371565b9050610b28828261139f565b98975050505050505050565b5f81118015610b4557506002548111155b610b845760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908195b9d1c9e48125160821b604482015260640161056e565b5f8181526020819052604090206004015460ff1615610be55760405162461bcd60e51b815260206004820152601660248201527f456e74727920686173206265656e2064656c6574656400000000000000000000604482015260640161056e565b5f8181526020819052604090208054610bfd906113cd565b610c495760405162461bcd60e51b815260206004820181905260248201527f4e6f207065726d697373696f6e20746f206465637279707420636f6e74656e74604482015260640161056e565b610c5681600101546113cd565b610ca25760405162461bcd60e51b815260206004820152601f60248201527f4e6f207065726d697373696f6e20746f206465637279707420617574686f7200604482015260640161056e565b604051428152339083907f251a57c29492db8fdc8b0546ed8ec79f0aab2359712eb0e642cd07efe6240b989060200160405180910390a35050565b6001600160a01b0381165f90815260016020908152604091829020805483518184028101840190945280845260609392830182828015610d3a57602002820191905f5260205f20905b815481526020019060010190808311610d26575b50505050509050919050565b5f8082118015610d5857506002548211155b610d975760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908195b9d1c9e48125160821b604482015260640161056e565b505f9081526007602052604090205490565b6001600160a01b038083165f90815260036020526040808220549284168252812054909190610dd8828261139f565b95945050505050565b60605f8211610e325760405162461bcd60e51b815260206004820152601c60248201527f4c696d6974206d7573742062652067726561746572207468616e203000000000604482015260640161056e565b5f6002548311610e425782610e46565b6002545b90508067ffffffffffffffff811115610e6157610e61611cd8565b604051908082528060200260200182016040528015610e8a578160200160208202803683370190505b506002549092505f905b5f81118015610ea257508282105b15610efd575f8181526020819052604090206004015460ff16610eeb5780848381518110610ed257610ed2611c98565b602090810291909101015281610ee781611cc0565b9250505b80610ef581611cec565b915050610e94565b5081811015610f9e575f8167ffffffffffffffff811115610f2057610f20611cd8565b604051908082528060200260200182016040528015610f49578160200160208202803683370190505b5090505f5b82811015610f9557848181518110610f6857610f68611c98565b6020026020010151828281518110610f8257610f82611c98565b6020908102919091010152600101610f4e565b50949350505050565b5050919050565b5f81118015610fb657506002548111155b610ff55760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908195b9d1c9e48125160821b604482015260640161056e565b5f8181526020819052604090206004015460ff16156110565760405162461bcd60e51b815260206004820152601660248201527f456e74727920686173206265656e2064656c6574656400000000000000000000604482015260640161056e565b5f818152600860209081526040808320338452909152812054906110828261107d836113d8565b6113e7565b90505f6110a18261109360016113d8565b61109c5f6113d8565b611415565b5f858152600760205260409020549091506110c4906110bf83611429565b611435565b5f858152600760205260409020556110dc8382611463565b5f85815260086020908152604080832033845282528083209390935586825260079052205461110a90611350565b505f84815260086020908152604080832033845290915290205461112d90611350565b50604051339085907f6778b937f4cfb9805fd9e2e12ed6f0db24da8768965c676fcaf6b22168eb0732905f90a350505050565b6001600160a01b0381165f90815260036020526040812054611181906113cd565b6111d85760405162461bcd60e51b815260206004820152602260248201527f4e6f207065726d697373696f6e20746f20616363657373206d6f6f6420737461604482015261747360f01b606482015260840161056e565b506001600160a01b03165f9081526003602052604090205490565b5f61120083836008611483565b9392505050565b5f61120083836002611483565b6001600160a01b0382165f90815260036020526040902054611239906110bf83611429565b6001600160a01b0383165f9081526003602090815260408083209390935560049052205461126b906110bf6001611590565b6001600160a01b0383165f90815260046020526040902055600554611293906110bf83611429565b6005556006546112a7906110bf6001611590565b6006556001600160a01b0382165f908152600360205260409020546112cb90611350565b506001600160a01b0382165f908152600460205260409020546112ed90611350565b506112f9600554611350565b50611305600654611350565b506001600160a01b0382165f90815260036020526040902054611328908361135f565b506001600160a01b0382165f9081526004602052604090205461134b908361135f565b505050565b5f61135b82306115a2565b5090565b5f61136a83836115a2565b5090919050565b5f82611383576113805f611590565b92505b81611394576113915f611590565b91505b61120083835f611618565b5f826113b1576113ae5f611590565b92505b816113c2576113bf5f611590565b91505b61120083835f6116e8565b5f6108968233611772565b5f6108968260ff1660026117f6565b5f826113f9576113f65f6113d8565b92505b8161140a576114075f6113d8565b91505b61120083835f611898565b5f611421848484611922565b949350505050565b5f6108968260046119af565b5f82611447576114445f611590565b92505b81611458576114555f611590565b91505b61120083835f611a11565b5f82611475576114725f6113d8565b92505b81611458576114555f6113d8565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f915f80516020611dd5833981519152916001600160a01b039091169063196d0b9b906114e9908890339089908990600401611d21565b6020604051808303815f875af1158015611505573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115299190611d8a565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015611572575f80fd5b505af1158015611584573d5f803e3d5ffd5b50505050509392505050565b5f6108968263ffffffff1660046117f6565b5f5f80516020611dd58339815191528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156115fd575f80fd5b505af115801561160f573d5f803e3d5ffd5b50505050505050565b5f80821561162b5750600160f81b61162e565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051630afe14ad60e31b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611dd5833981519152916001600160a01b0316906357f0a568906064015b6020604051808303815f875af11580156116ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116de9190611d8a565b9695505050505050565b5f8082156116fb5750600160f81b6116fe565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516385362ee760e01b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611dd5833981519152916001600160a01b0316906385362ee79060640161169e565b5f805f80516020611dd583398151915280546040516382027b6d60e01b8152600481018790526001600160a01b0386811660248301529293509116906382027b6d90604401602060405180830381865afa1580156117d2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114219190611da1565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f915f80516020611dd5833981519152916001600160a01b0390911690639cd07acb906118589087908790600401611dc0565b6020604051808303815f875af1158015611874573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114219190611d8a565b5f8082156118ab5750600160f81b6118ae565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163f77f3f1d60e01b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611dd5833981519152916001600160a01b03169063f77f3f1d9060640161169e565b5f805f80516020611dd58339815191526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af115801561198b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dd89190611d8a565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516307227b9160e21b81525f915f80516020611dd5833981519152916001600160a01b0390911690631c89ee44906118589087908790600401611dc0565b5f808215611a245750600160f81b611a27565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611dd5833981519152916001600160a01b03169063117b2f389060640161169e565b5f60208284031215611aab575f80fd5b5035919050565b80356001600160a01b0381168114611ac8575f80fd5b919050565b5f8060408385031215611ade575f80fd5b611ae783611ab2565b946020939093013593505050565b5f8083601f840112611b05575f80fd5b50813567ffffffffffffffff811115611b1c575f80fd5b602083019150836020828501011115611b33575f80fd5b9250929050565b5f805f805f805f805f60c08a8c031215611b52575f80fd5b8935985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115611b7e575f80fd5b611b8a8d838e01611af5565b909850965060808c0135915080821115611ba2575f80fd5b611bae8d838e01611af5565b909650945060a08c0135915080821115611bc6575f80fd5b50611bd38c828d01611af5565b915080935050809150509295985092959850929598565b5f60208284031215611bfa575f80fd5b61120082611ab2565b602080825282518282018190525f9190848201906040850190845b81811015611c3a57835183529284019291840191600101611c1e565b50909695505050505050565b5f8060408385031215611c57575f80fd5b611c6083611ab2565b9150611c6e60208401611ab2565b90509250929050565b5f8060408385031215611c88575f80fd5b82359150611c6e60208401611ab2565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f60018201611cd157611cd1611cac565b5060010190565b634e487b7160e01b5f52604160045260245ffd5b5f81611cfa57611cfa611cac565b505f190190565b60548110611d1d57634e487b7160e01b5f52602160045260245ffd5b9052565b8481525f60206001600160a01b03861660208401526080604084015284518060808501525f5b81811015611d635786810183015185820160a001528201611d47565b505f60a0828601015260a0601f19601f83011685010192505050610dd86060830184611d01565b5f60208284031215611d9a575f80fd5b5051919050565b5f60208284031215611db1575f80fd5b81518015158114611200575f80fd5b828152604081016112006020830184611d0156fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700a164736f6c6343000818000a";

type ConfDiaryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfDiaryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfDiary__factory extends ContractFactory {
  constructor(...args: ConfDiaryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConfDiary & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConfDiary__factory {
    return super.connect(runner) as ConfDiary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfDiaryInterface {
    return new Interface(_abi) as ConfDiaryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ConfDiary {
    return new Contract(address, _abi, runner) as unknown as ConfDiary;
  }
}
